syntax = "proto3";
option go_package = "github.com/urodstvo/messenger-server/libs/grpc/proto/__generated__;__generated__";
package src;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message User {
    uint32 id = 1;
    string first_name = 2;
    string last_name = 3;
    string tag = 4;
    string email = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

message CreateUserRequest {
    string tag = 1;
    string email = 2;
}

message GetUserByIdRequest {
    uint32 user_id = 1;
}

message GetUserByIdResponse {
    User user = 1;
}

message GetUsersByIdsRequest {
    repeated uint32 user_ids = 1;
}

message GetUsersByIdsResponse {
    repeated User users = 1;
}

message GetUsersLikeTagRequest {
    string tag = 1;
}

message GetUsersLikeTagResponse {
    repeated User users = 1;
}

message GetUsersLikeFirstLastNameRequest {
    string first_name = 1;
    string last_name = 2;
}

message GetUsersLikeFirstLastNameResponse {
    repeated User users = 1;
} 

message UpdateUserTagRequest {
    uint32 user_id = 1;
    string tag = 2;
} 

message UpdateUserEmailRequest {
    uint32 user_id = 1;
    string email = 2;
}

message UpdateUserFirstLastNameRequest {
    uint32 user_id = 1;
    string first_name = 2;
    string last_name = 3;
}

message DeleteUserByIdRequest {
    uint32 user_id = 1;
}

message GenerateOTPRequest {
    string email = 1;
}

message LoginRequest {
    string email = 1;
    string otp = 2;
}

message LoginResponse {
    string access_token = 1;
    string refresh_token = 2;
}

message RegisterRequest {
    string email = 1;
    string otp = 2;
    string tag = 3;
    optional string first_name = 4;
    optional string last_name = 5;
}

message RegisterResponse {
    string access_token = 1;
    string refresh_token = 2;
}

message CheckEmailExistsRequest {
    string email = 1;
}

message CheckEmailExistsResponse {
    bool exists = 1;
}

service AuthService {
    // user API
    rpc CreateUser(CreateUserRequest) returns (google.protobuf.Empty);
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc GetUsersLikeTag(GetUsersLikeTagRequest) returns (GetUsersLikeTagResponse);
    rpc GetUsersLikeFirstLastName(GetUsersLikeFirstLastNameRequest) returns (GetUsersLikeFirstLastNameResponse);
    rpc UpdateUserTag(UpdateUserTagRequest) returns (google.protobuf.Empty);
    rpc UpdateUserEmail(UpdateUserEmailRequest) returns (google.protobuf.Empty);
    rpc UpdateUserFirstLastName(UpdateUserFirstLastNameRequest) returns (google.protobuf.Empty);
    rpc DeleteUserById(DeleteUserByIdRequest) returns (google.protobuf.Empty);

    // auth API
    rpc GenerateOTP(GenerateOTPRequest) returns (google.protobuf.Empty);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc CheckEmailExists(CheckEmailExistsRequest) returns (CheckEmailExistsResponse);

}